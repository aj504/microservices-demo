apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: user-db-mongodata
  name: user-db-mongodata
  namespace: sock-shop-prod
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: user-db
  name: user-db
  namespace: sock-shop-prod
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      annotations:
        sidecar.istio.io/inject: "false"
        dynatrace/instrument: "false"
        #pipeline.stage: prod-stable
        #pipeline.build: 2.0.2.1234
        #pipeline.project: sockshop
        support.contact: "mary.poppins@sockshop.com"
        support.channel: "#support-sockshop-data"
      labels:
        io.kompose.service: user-db
        name: user-db
        stage: prod
        version: "2.0"
        tier: data
        product: sockshop
    spec:
      containers:
      - image: mongo
        name: user-db
        env:
        - name: MONGODB_ADMIN_PASSWORD
          value: "password"
        - name: MONGODB_USER
          value: "user"
        - name: MONGODB_PASSWORD
          value: "password"
        - name: MONGODB_DATABASE
          value: "default"
        ports:
        - containerPort: 27017
        resources: {}
        volumeMounts:
        - mountPath: /data/db
          name: user-db-mongodata
      restartPolicy: Always
      volumes:
      - name: user-db-mongodata
        persistentVolumeClaim:
          claimName: user-db-mongodata
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: user-db
  name: user-db
  namespace: sock-shop-prod
spec:
  ports:
  - name: "27017"
    port: 27017
    targetPort: 27017
  selector:
    io.kompose.service: user-db
status:
  loadBalancer: {}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: sock-shop-prod
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
        prometheus.io/scrape: "false"
        dynatrace/instrument: "false"
        #pipeline.stage: prod-stable
        #pipeline.build: 1.0.1.0005
        #pipeline.project: sockshop
        support.contact: "jimmy.page@sockshop.com"
        support.channel: "#support-sockshop-middleware"
      labels:
        name: rabbitmq
        stage: prod
        version: "1.0"
        tier: messaging
        product: sockshop
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3.7-management
        ports:
        - containerPort: 15672
          name: management
        - containerPort: 5672
          name: rabbitmq
      - name: rabbitmq-exporter
        image: kbudde/rabbitmq-exporter
        ports:
        - containerPort: 9090
          name: exporter
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  labels:
    name: rabbitmq
  namespace: sock-shop-prod
spec:
  ports:
    # the port that this service should serve on
  - port: 5672
    name: rabbitmq
    targetPort: 5672
  - port: 9090
    name: exporter
    targetPort: exporter
    protocol: TCP
  - port: 4369
    name: epmd
  selector:
    name: rabbitmq
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: carts-db-mongodata
  namespace: sock-shop-prod
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: carts-db
  namespace: sock-shop-prod
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
        dynatrace/instrument: "false"
        #pipeline.stage: prod-stable
        #pipeline.build: 1.2.0.2644
        #pipeline.project: sockshop
        support.contact: "mary.poppins@sockshop.com"
        support.channel: "#support-sockshop-data"
      labels:
        name: carts-db
        stage: prod
        release: stable
        version: "1.2"
        tier: data
        product: sockshop
    spec:
      containers:
      - image: mongo
        name: carts-db
        env:
        - name: MONGODB_ADMIN_PASSWORD
          value: "password"
        - name: MONGODB_USER
          value: "user"
        - name: MONGODB_PASSWORD
          value: "password"
        - name: MONGODB_DATABASE
          value: "carts-db"
        ports:
        - containerPort: 27017
        resources: {}
        volumeMounts:
        - mountPath: /data/db
          name: carts-db-mongodata
      restartPolicy: Always
      volumes:
      - name: carts-db-mongodata
        persistentVolumeClaim:
          claimName: carts-db-mongodata
---
apiVersion: v1
kind: Service
metadata:
  name: carts-db
  namespace: sock-shop-prod
spec:
  ports:
  - name: "27017"
    port: 27017
    targetPort: 27017
  selector:
    name: carts-db
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: catalogue-db
  labels:
    name: catalogue-db
  namespace: sock-shop-prod
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
        dynatrace/instrument: "false"
        #pipeline.stage: prod-stable
        #pipeline.build: 1.4.3.0054
        #pipeline.project: sockshop
        support.contact: "mary.poppins@sockshop.com"
        support.channel: "#support-sockshop-data"
      labels:
        name: catalogue-db
        stage: prod
        version: "1.4"
        tier: data
        product: sockshop
    spec:
      containers:
      - name: catalogue-db
        image: dynatracesockshop/catalogue-db
        securityContext:
          privileged: true
          runAsUser: 0
        env:
          - name: MYSQL_ROOT_PASSWORD
            value: fake_password
          - name: MYSQL_DATABASE
            value: socksdb
        ports:
        - name: mysql
          containerPort: 3306
---
apiVersion: v1
kind: Service
metadata:
  name: catalogue-db
  labels:
    name: catalogue-db
  namespace: sock-shop-prod
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    name: catalogue-db
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: orders-db-mongodata
  namespace: sock-shop-prod
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: orders-db
  namespace: sock-shop-prod
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
        dynatrace/instrument: "false"
        #pipeline.stage: prod-stable
        #pipeline.build: 1.0.2.0114
        #pipeline.project: sockshop
        support.contact: "mary.poppins@sockshop.com"
        support.channel: "#support-sockshop-data"
      labels:
        name: orders-db
        stage: prod
        version: "1.0"
        tier: data
        product: sockshop
    spec:
      containers:
      - image: mongo
        name: orders-db
        env:
        - name: MONGODB_ADMIN_PASSWORD
          value: "password"
        - name: MONGODB_USER
          value: "user"
        - name: MONGODB_PASSWORD
          value: "password"
        - name: MONGODB_DATABASE
          value: "orders-db"
        ports:
        - containerPort: 27017
        resources: {}
        volumeMounts:
        - mountPath: /data/db
          name: orders-db-mongodata
      restartPolicy: Always
      volumes:
      - name: orders-db-mongodata
        persistentVolumeClaim:
          claimName: orders-db-mongodata
---
apiVersion: v1
kind: Service
metadata:
  name: orders-db
  namespace: sock-shop-prod
spec:
  ports:
  - name: "27017"
    port: 27017
    targetPort: 27017
  selector:
    name: orders-db
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: carts
  namespace: sock-shop-prod
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
        dynatrace/instrument: "true"
        #pipeline.stage: prod-stable
        #pipeline.build: 2.3.1.3476
        #pipeline.project: sockshop
        support.contact: "john.doe@sockshop.com"
        support.channel: "#support-sockshop-services"
      labels:
        app: carts
        stage: prod
        release: stable
        version: "2.3"
        tier: "business"
        product: "sockshop"
    spec:
      containers:
      - name: carts
        image: wmsegar/carts:1.0
        env:
        - name: JAVA_OPTS
          value: -Xms128m -Xmx512m -XX:PermSize=128m -XX:MaxPermSize=128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
        livenessProbe:
          httpGet:
            path: /carts/1/items/health
            port: 8080
          initialDelaySeconds: 240
          periodSeconds: 10
          timeoutSeconds: 15
        readinessProbe:
          httpGet:
            path: /carts/1/items/health
            port: 8080
          initialDelaySeconds: 240
          periodSeconds: 10
          timeoutSeconds: 15
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: carts
  labels:
    app: carts
  namespace: sock-shop-prod
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: carts
  type: LoadBalancer
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: catalogue
  namespace: sock-shop-prod
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
        dynatrace/instrument: "true"
        #pipeline.stage: prod-stable
        #pipeline.build: 3.1.0.0593
        #pipeline.project: sockshop
        support.contact: "john.doe@sockshop.com"
        support.channel: "#support-sockshop-services"
      labels:
        app: catalogue
        stage: prod
        release: stable
        version: "3.1"
        tier: "business"
        product: "sockshop"
    spec:
      containers:
      - name: catalogue
        image: dynatracesockshop/catalogue:0.5.0
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: catalogue
  labels:
    app: catalogue
  namespace: sock-shop-prod
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: catalogue
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: front-end.stable
  namespace: sock-shop-prod
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
        dynatrace/instrument: "true"
        #pipeline.stage: prod-stable
        #pipeline.build: 1.4.0.7424
        #pipeline.project: sockshop
        support.contact: "jane.smith@sockshop.com"
        support.channel: "#support-sockshop-frontend"
      labels:
        app: front-end.stable
        stage: prod
        release: stable
        version: "1.4"
        tier: "frontend"
        product: "sockshop"
    spec:
      containers:
      - name: front-end
        image: dynatracesockshop/front-end:0.5.0
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
      nodeSelector:
        beta.kubernetes.io/os: linux

---
apiVersion: v1
kind: Service
metadata:
  name: front-end
  labels:
    app: front-end.stable
  namespace: sock-shop-prod
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: front-end.stable
  type: LoadBalancer
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: orders
  namespace: sock-shop-prod
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
        dynatrace/instrument: "true"
        #pipeline.stage: prod-stable
        #pipeline.build: 1.0.0.3883
        #pipeline.project: sockshop
        support.contact: "john.doe@sockshop.com"
        support.channel: "#support-sockshop-services"
      labels:
        app: orders
        stage: prod
        release: stable
        version: "1.0"
        tier: "business"
        product: "sockshop"
    spec:
      containers:
      - name: orders
        image: dynatracesockshop/orders:0.5.0
        env:
        - name: JAVA_OPTS
          value: -Xms128m -Xmx512m -XX:PermSize=128m -XX:MaxPermSize=128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 240
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 240
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: orders
  labels:
    app: orders
  namespace: sock-shop-prod
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: orders
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: payment
  namespace: sock-shop-prod
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
        dynatrace/instrument: "true"
        #pipeline.stage: prod-stable
        #pipeline.build: 1.0.1.3243
        #pipeline.project: sockshop
        support.contact: "john.doe@sockshop.com"
        support.channel: "#support-sockshop-services"
      labels:
        app: payment
        stage: prod
        release: stable
        version: "1.0"
        tier: "business"
        product: "sockshop"
    spec:
      containers:
      - name: payment
        image: dynatracesockshop/payment:0.5.0
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: payment
  labels:
    app: payment
  namespace: sock-shop-prod
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: payment
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: queue-master
  namespace: sock-shop-prod
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
        dynatrace/instrument: "true"
        #pipeline.stage: prod-stable
        #pipeline.build: 1.0.0.0323
        #pipeline.project: sockshop
        support.contact: "jimmy.page@sockshop.com"
        support.channel: "#support-sockshop-middleware"
      labels:
        app: queue-master
        stage: prod
        release: stable
        version: "1.0"
        tier: "messaging"
        product: "sockshop"
    spec:
      containers:
      - name: queue-master
        image: dynatracesockshop/queue-master:0.5.0
        env:
        - name: JAVA_OPTS
          value: -Xms128m -Xmx512m -XX:PermSize=128m -XX:MaxPermSize=128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 120
          periodSeconds: 10
          timeoutSeconds: 15
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 120
          periodSeconds: 10
          timeoutSeconds: 15
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: queue-master
  labels:
    app: queue-master
  namespace: sock-shop-prod
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: queue-master
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: shipping
  namespace: sock-shop-prod
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
        dynatrace/instrument: "true"
        #pipeline.stage: prod-stable
        #pipeline.build: 1.0.2.0113
        #pipeline.project: sockshop
        support.contact: "john.doe@sockshop.com"
        support.channel: "#support-sockshop-services"
      labels:
        app: shipping
        stage: prod
        release: stable
        version: "1.0"
        tier: "business"
        product: "sockshop"
    spec:
      containers:
      - name: shipping
        image: dynatracesockshop/shipping:0.5.0
        env:
        - name: JAVA_OPTS
          value: -Xms128m -Xmx512m -XX:PermSize=128m -XX:MaxPermSize=128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 240
          periodSeconds: 10
          timeoutSeconds: 15
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 240
          periodSeconds: 10
          timeoutSeconds: 15
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: shipping
  labels:
    app: shipping
  namespace: sock-shop-prod
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: shipping
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: user
  namespace: sock-shop-prod
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
        dynatrace/instrument: "true"
        #pipeline.stage: prod-stable
        #pipeline.build: 1.4.1.0365
        #pipeline.project: sockshop
        support.contact: "tony.stark@sockshop.com"
        support.channel: "#support-sockshop-services"
      labels:
        app: user
        stage: prod
        release: stable
        version: "1.4"
        tier: "business"
        product: "sockshop"
    spec:
      containers:
      - name: user
        image: dynatracesockshop/user:0.5.0
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: user
  labels:
    app: user
  namespace: sock-shop-prod
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: user
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: default-view
  namespace: sock-shop-prod
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
- kind: ServiceAccount
  name: default
  namespace: sock-shop-prod
